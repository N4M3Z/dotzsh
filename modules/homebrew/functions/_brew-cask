# Autocompletion for homebrew-cask.
#
# @author Patrick Stadler <https://github.com/pstadler>
# @author Martin Zeman <https://github.com/N4M3Z>
#
# @note This script intercepts calls to the brew plugin and adds autocompletion for the cask subcommand.

compdef _brew-cask brew

_brew-cask()
{
  local curcontext="$curcontext" state line
  typeset -A opt_args

  _arguments -C \
    ':command:->command' \
    ':subcmd:->subcmd' \
    '*::options:->options'

  case $state in
    (command)
      __call_original_brew
      cask_commands=(
        "cask:manage casks"
        "         " # hack to adjust space for different alignment in brew subcommand completion
      )
      _describe -t commands 'brew subcommand' cask_commands ;; # adjusted label

    (subcmd)
      case "$line[1]" in
        cask)
          if (( CURRENT == 3 )); then
            local -a subcommands
            subcommands=(
                "alfred:displays note about new built-in alfred support"
                "audit:verifies installability of Casks"
                "cat:dump raw source of the given Cask to the standard output"
                "cleanup:cleans up cached downloads and tracker symlinks"
                "create:creates the given Cask and opens it in an editor"
                "doctor:checks for configuration issues"
                "edit:edits the given Cask"
                "fetch:downloads Cask resources to local cache"
                "home:opens the homepage of the given Cask"
                "info:displays information about the given Cask"
                "install:installs the given Cask"
                "list:with no args, lists installed Casks; given installed Casks, lists staged files"
                "search:searches all known Casks"
                "uninstall:uninstalls the given Cask"
                "update:a synonym for 'brew update'"
                "zap:zaps all files associated with the given Cask"
            )
            _describe -t commands "brew cask subcommand" subcommands
          fi ;;

        *)
          __call_original_brew ;;
      esac ;;

    (options)
      local -a casks installed_casks
      local expl
      case "$line[2]" in
        list|uninstall)
          __brew_installed_casks
          _wanted installed_casks expl 'installed casks' compadd -a installed_casks ;;
        audit|edit|home|info|install)
          __brew_all_casks
          _wanted casks expl 'all casks' compadd -a casks ;;
      esac ;;
  esac
}

__brew_all_casks() {
  casks=(`brew cask search`)
}

__brew_installed_casks() {
  installed_casks=(`brew cask list`)
}

__call_original_brew()
{
  local ret=1
  _call_function ret _brew
  compdef _brew-cask brew
}
